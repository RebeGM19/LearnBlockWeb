/* Background style */
body{
    background-color: rgb(240, 248, 255, 0.4);
}

/* Top zone properties and design */
#topZone{
    color: white;
    background: linear-gradient(180deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%);
    margin-bottom: 0px;
    height: 75px;
}

/* Top Menu properties and design (structure and buttons) */
#upMenu{
    border-top-style: solid;
    border-color: deepskyblue;
    border-width: 2px;
    background-color: aliceblue;
    height: 40px;
    box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 3px 5px 0 rgba(0,0,0,0.19);
}
#bHome, #bGuide, #bWhatLB, #bWhatLBW, #bDetails{
    font-size: 18px;
    font-family: 'Roboto', sans-serif;
    display: inline-block;
    background-color: aliceblue;
    border-color: aliceblue;
    border-width: 1px;
    border-style: solid;
    border-radius: 5px;
    transition-duration: 0.4s;
    height: 30px;
    margin-right: 10px;
    margin-top: 0px;
}
#bHome:hover, #bGuide:hover, #bWhatLB:hover, #bWhatLBW:hover, #bDetails:hover,
#bHome:focus, #bGuide:focus, #bWhatLB:focus, #bWhatLBW:focus, #bDetails:focus{
    border-style: solid;
    border-width: 1px;
    border-color: deepskyblue;
    box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 3px 5px 0 rgba(0,0,0,0.19);
}
#bHome:active, #bGuide:active, #bWhatLB:active, #bWhatLBW:active, #bDetails:active{
    background-color: deepskyblue;
    transition: 0s;
    transform: translateY(1.5px);
}

/* Language selector style */
#languageMenu {
    border-style: solid;
    border-width: 2.5px;
    border-color: deepskyblue;
    border-radius: 10px;
    width: 125px;
    height: 30px;
    color: #000;
    font-size: 18px;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background: white url(img/down-arrow.png) no-repeat 90% center;
    transition-duration: 0.4s;
}
#languageMenu:hover{
    box-shadow: inset 0 0 5px rgba(000, 000, 000, 0.5);
}
#languageMenu:focus{
    box-shadow: inset 0 0 5px rgba(000, 000, 000, 0.5);
    background: white url(img/up-arrow.png) no-repeat 90% center;
}

/* Python/BlockText/LearnBlock interface's size and properties */
#home{
    margin-left: 0.5%;
    margin-right: 0.5%;
}
#tab-learnblock, #tab-blocktext, #tab-python{
    padding: 5px;
    border-bottom-right-radius: 10px;
    border-bottom-left-radius: 10px;
    border-top-right-radius: 10px;
    border-style: solid;
    border-width: thin;
    border-color: grey;
    box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 3px 5px 0 rgba(0,0,0,0.19);
    background-color: white;
}
#learnblockDiv {
    height: 680px;
    width: 100%;
    border: solid rgba(0, 0, 0, 0.3);
    border-width: thin;
    box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 1px 5px 0 rgba(0,0,0,0.19);
}
#resultblocktext, #resultpython{
    width: 100%;
    height: 680px;
    resize: none;
    background-color: #404040;
    color: #fff;
    font-family: Consolas,monaco,monospace;
}
#resultblocktext:focus, #resultpython:focus{
    border-style: solid;
}

.textarea-container {
    position: relative;
}
.textarea-container button {
    position: absolute;
    top: 0;
    right: 0;
    margin-right: 0.1%;
    font-size: 20px;
    font-weight: 500;
    border-style: groove;
    border-color: grey;
    border-radius: 0.12em;
    box-sizing: border-box;
    text-decoration: none;
    font-family: 'Roboto', sans-serif;
    color: #000;
    background-image: linear-gradient(#e6e6e6, white, white);
    text-align: center;
    transition: all 0.2s;
    height: 50px;
    width: 180px;
}
.textarea-container button:hover {
    background-image: linear-gradient(#d9d9d9, #d9d9d9);
}

/* Main Interface buttons style */
#bPython, #bBT, #bLB{
    background-image: linear-gradient(#e6e6e6, white, white);
    border-top-style: groove;
    border-right-style: groove;
    border-bottom-style: hidden;
    border-left-style: hidden;
    border-color: grey;
    box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 -3px 5px 0 rgba(0,0,0,0.19);
    font-family: Consolas,monaco,monospace;
    font-size: 18px;
}
#bPython{
    border-top-left-radius: 10px;
    border-left-style: groove;
    border-color: grey;
}
#bLB{
    border-top-right-radius: 10px;
    border-bottom-right-radius: -10px;
}
#bPython:hover, #bBT:hover, #bLB:hover,
#bPython:focus, #bBT:focus, #bLB:focus{
    background-image: linear-gradient(#d9d9d9, #d9d9d9);
}
.execButton{
    border-style: outset;
    font-family: Consolas,monaco,monospace;
    font-size: 16px;
    text-align: left;
    box-shadow: 0 1px 2px 0 rgba(0,0,0,0.2), 0 1.5px 2.5px 0 rgba(0,0,0,0.19);
}
.execButton:active {
    transform: translateY(1px);
}

/* Success or Fail generation message */
#resultCode, #resultCode2{
    width: 400px;
    text-align: center;
    font-family: 'Roboto', sans-serif;
}

/* Aux separations and sizes */
#sepButtons{
    width: 300px;
}
.insideList{
    width: 250px;
    height: 35px;
}

/* Pages style */
article{
    box-shadow: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);
    border-radius: 2px;
    background-color: #fff;
    padding: 45px;
    margin-top: 2%;
    margin-bottom: 2%;
    margin-left: 15%;
    margin-right: 15%;
}

/* Texts style */
h2{
    margin-bottom: 2%;
    margin-left: -1%;
    font-weight: bold;
}
p{
    text-align: justify;
    font-size: 18px;
}
li{
    text-align: justify;
    font-size: 18px;
}
a{
    text-align: justify;
    font-size: 18px;
    color: #8000ff;
    transition-duration: 0.2s;
}
a:hover{
    color: #4d0099;
    text-decoration: underline;
}
label{
    font-size: 18px;
    font-family: 'Roboto', sans-serif;
}

/* Details icons' table structure */
.footerDet{
    margin-top: 5%;
    border-collapse: separate;
    border-spacing: 25px 0px;
    width: 100%;
}
.footerDet td{
    vertical-align: bottom;
}



/* ------------------------------------------------------------------------------------------------ */
/* ------------------------------------LearnBlock Interface---------------------------------------- */
/* ------------------------------------------------------------------------------------------------ */

/* Pointer's design when a block is being grabbed */
.learnblockToolboxGrab {
    cursor: url("<<<PATH>>>/handclosed.cur"), auto;
    cursor: grabbing;
    cursor: -webkit-grabbing;
}

/* Left side of the main LearnBlock interface (categories, scrollbar) */
.learnblockToolboxDiv {
    background-color: #f2f2f2;
    overflow-x: auto;
    overflow-y: auto;
    position: absolute;
    z-index: 70;
    -webkit-tap-highlight-color: transparent;
}
.learnblockTreeRoot {
    padding: 4px 0;
    width: 35px;
}
.learnblockTreeRoot:focus {
    outline: none;
}

/* Categories Boxes */
.learnblockTreeRow {
    height: 120px;
    width: 140px;
    line-height: 22px;
    margin-bottom: 20px;
    background-color: #c0c0c0;
    white-space: nowrap;
    border-left-style: solid;
    border-right-style: solid;
    border-color: #888;
    border-width: thin;
    transform: matrix(0, -1, 1, 0, -10, 0);
}
/* When the pointer is over a non selected category */
.learnblockTreeRow:not(.learnblockTreeSelected):hover {
    background-color: #d9d9d9;
}

/* Categories */
.learnblockTreeLabel {
    cursor: default;
    font-family: sans-serif;
    font-size: 18px;
    padding: 0 3px;
    vertical-align: middle;
}
/* Categories' Text when selected */
.learnblockTreeSelected .learnblockTreeLabel {
    color: #000;
}

/* Flyout's properties */
.learnblockFlyout {
    position: absolute;
    z-index: 20;
    border-top-right-radius: 7px;
    border-bottom-right-radius: 7px;
    box-shadow: 0px 0px 3px 1px rgba(0, 0, 0, .3);

}
.learnblockFlyoutBackground {
    fill: #fff;
    fill-opacity: .8;
}
/* Buttons inside the Flyout */
.learnblockFlyoutButton {
    fill: #666;
    cursor: default;
}
.learnblockFlyoutButtonShadow {
    fill: #333;
}
.learnblockFlyoutButton:hover {
    fill: #737373;
}

/* Main workspace */
.learnblockSvg {
    background-color: #bfbfbf;
    outline: none;
    overflow: hidden;
    position: absolute;
    display: block;
}

/* LearnBlock interface's properties */
.injectionDiv {
    height: 100%;
    position: relative;
    overflow: hidden;  /* So blocks in drag surface disappear at edges */
    touch-action: none;
}

/* Non selectable items */
.learnblockNonSelectable {
    user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
}

/* Workspace surface that can be dragged */
.learnblockWsDragSurface {
    display: none;
    position: absolute;
    top: 0;
    left: 0;
}
.learnblockWsDragSurface.learnblockOverflowVisible {
    overflow: visible;
}

/* Block's surface that can be dragged */
.learnblockBlockDragSurface {
    display: none;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: visible !important;
    z-index: 50;  /* Display below toolbox, but above everything else. */
}

/* Canvas' properties */
.learnblockBlockCanvas.learnblockCanvasTransitioning {
    transition: transform .5s;
}

/* Highlight when connection between blocks */
.learnblockHighlightedConnectionPath {
    fill: none;
    stroke: #99ddff;
    stroke-width: 4px;
}
.learnblockPathLight {
    fill: none;
    stroke-linecap: round;
    stroke-width: 1;
}
/* When a block is selected, it is highlighted */
.learnblockSelected > .learnblockPath {
    stroke: #99ddff;
    stroke-width: 3px;
}
.learnblockSelected > .learnblockPathLight {
    display: none;
}

/* Changes the cursor to an open hand when the item is draggable */
.learnblockDraggable {
    cursor: url("<<<PATH>>>/handopen.cur"), auto;
    cursor: grab;
    cursor: -webkit-grab;
}
/* Changes the cursor to a closed hand when the item is being dragged */
.learnblockDragging {
    cursor: url("<<<PATH>>>/handclosed.cur"), auto;
    cursor: grabbing;
    cursor: -webkit-grabbing;
}
/* Changes cursor on mouse down. Not effective in Firefox */
.learnblockDraggable:active {
    cursor: url("<<<PATH>>>/handclosed.cur"), auto;
    cursor: grabbing;
    cursor: -webkit-grabbing;
}
/* Changes the cursor on the whole drag surface in case the mouse gets ahead of block during a drag. This way the cursor is still a closed hand */
.learnblockBlockDragSurface .learnblockDraggable {
    cursor: url("<<<PATH>>>/handclosed.cur"), auto;
    cursor: grabbing;
    cursor: -webkit-grabbing;
}

/* What happens when two blocks that can connect are next to each other */
.learnblockInsertionMarker > .learnblockPath,
.learnblockInsertionMarker > .learnblockPathLight,
.learnblockInsertionMarker > .learnblockPathDark {
    fill-opacity: .2;
    stroke: none;
}

/* If the dragging block is dropped, this block will be replaced */
.learnblockReplaceable .learnblockPath {
    fill-opacity: .5;
}
.learnblockReplaceable .learnblockPathLight,
.learnblockReplaceable .learnblockPathDark {
    display: none;
}

/* Colour for an invalid input in mutators */
.learnblockInvalidInput {
    background: #faa;
}

/* Texts' (from the interface) properties */
.learnblockText {
    cursor: default;
    fill: #fff;
    font-family: Consolas,monaco,monospace;
    font-size: 11pt;
}
.learnblockNonEditableText > text {
    pointer-events: none;
}
/* Mutator's background */
.learnblockNonEditableText > rect,
.learnblockEditableText > rect {
    fill: #fff;
    fill-opacity: .6;
}
/* Mutator's text */
.learnblockNonEditableText > text,
.learnblockEditableText > text {
    fill: #000;
}
/* Mutator's border hover */
.learnblockEditableText:hover > rect {
    stroke: #99ddff;
    stroke-width: 2;
}
.learnblockSvg text,
.learnblockBlockDragSurface text {
    user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
    cursor: inherit;
}

/* If an item is hidden, it doesn't display on the webpage */
.learnblockHidden {
    display: none;
}

/* Text input inside a block (parameters, names, etc) */
.learnblockHtmlInput {
    border: none;
    border-radius: 4px;
    font-family: Consolas,monaco,monospace;
    height: 100%;
    margin: 0;
    outline: none;
    padding: 0;
    width: 100%;
    text-align: center;
}
.learnblockHtmlInput::-ms-clear {
    display: none;
}

/* Scrollbars' properties (toolbox and flyout) */
.learnblockMainWorkspaceScrollbar {
    z-index: 20;
}
.learnblockFlyoutScrollbar {
    z-index: 30;
}
.blocklyScrollbarHorizontal,
.blocklyScrollbarVertical {
    position: absolute;
    outline: none;
}
.learnblockScrollbarBackground {
    opacity: 0;
}
.learnblockScrollbarHandle {
    fill: #808080;
}
.learnblockScrollbarHandle:hover {
    fill: #666666;
}

/* Widget's properties */
.learnblockWidgetDiv {
    display: none;
    position: absolute;
    z-index: 99999;  /* Big value for bootstrap3 compatibility */
}
.learnblockWidgetDiv .goog-menu {
    background: #fff;
    border-color: transparent;
    border-style: solid;
    border-width: 1px;
    cursor: default;
    font: normal 13px Consolas,monaco,monospace;
    margin: 0;
    outline: none;
    padding: 4px 0;
    position: absolute;
    overflow-y: auto;
    overflow-x: hidden;
    max-height: 100%;
    z-index: 20000;
    box-shadow: 0px 0px 3px 1px rgba(0, 0, 0, .3);
}
.learnblockWidgetDiv .goog-menu.focused {
    box-shadow: 0px 0px 6px 1px rgba(0, 0, 0, .3);
}
.learnblockWidgetDiv .goog-menuitem-content {
    color: #000;
}

/* Dropdown Menu's properties */
.learnblockDropDownDiv {
    position: fixed;
    left: 0;
    top: 0;
    z-index: 1000;
    display: none;
    border: 1px solid;
    border-radius: 2px;
    padding: 4px;
    box-shadow: 0px 0px 3px 1px rgba(0, 0, 0, .3);
}
.learnblockropDownDiv.focused {
    box-shadow: 0px 0px 6px 1px rgba(0, 0, 0, .3);
}
.learnblockDropDownContent {
    max-height: 300px;
    overflow: auto;
    overflow-x: hidden;
}
.learnblockDropDownArrow {
    position: absolute;
    left: 0;
    top: 0;
    width: 16px;
    height: 16px;
    z-index: -1;
    background-color: inherit;
    border-color: inherit;
}
.learnblockDropdownMenu {
    border-radius: 2px;
    padding: 0 !important;
}
.learnblockDropDownDiv .goog-menu {
    cursor: default;
    font: normal 13px Consolas,monaco,monospace;
    outline: none;
    z-index: 20000;
}
.learnblockDropDownDiv .goog-menuitem-content {
    color: #000;
}

/* Widgets and dropdowns items' properties */
.learnblockWidgetDiv .learnblockDropdownMenu .goog-menuitem,
.learnblockDropDownDiv .learnblockDropdownMenu .goog-menuitem {
    padding-left: 28px;
}
.learnblockWidgetDiv .goog-option-selected .goog-menuitem-checkbox,
.learnblockWidgetDiv .goog-option-selected .goog-menuitem-icon,
.learnblockDropDownDiv .goog-option-selected .goog-menuitem-checkbox,
.learnblockDropDownDiv .goog-option-selected .goog-menuitem-icon {
    background: url(<<<PATH>>>/sprites.png) no-repeat -48px -16px;
}
.learnblockWidgetDiv .goog-menuitem,
.learnblockDropDownDiv .goog-menuitem {
    color: #000;
    font: normal 13px Consolas,monaco,monospace;
    list-style: none;
    margin: 0;
    min-width: 7em;
    border: none;
    padding: 6px 15px;
    white-space: nowrap;
    cursor: pointer;
}
.learnblockWidgetDiv .goog-menu-nocheckbox .goog-menuitem,
.learnblockWidgetDiv .goog-menu-noicon .goog-menuitem,
.learnblockDropDownDiv .goog-menu-nocheckbox .goog-menuitem,
.learnblockDropDownDiv .goog-menu-noicon .goog-menuitem {
    padding-left: 12px;
}
.learnblockWidgetDiv .goog-menuitem-content,
.learnblockDropDownDiv .goog-menuitem-content {
    font: normal 13px Consolas,monaco,monospace;
}
/* State: hover. */
.learnblockWidgetDiv .goog-menuitem-highlight,
.learnblockDropDownDiv .goog-menuitem-highlight {
    background-color: rgba(0, 0, 0, .1);
}
/* State: selected/checked. */
.learnblockWidgetDiv .goog-menuitem-checkbox,
.learnblockWidgetDiv .goog-menuitem-icon,
.learnblockDropDownDiv .goog-menuitem-checkbox,
.learnblockDropDownDiv .goog-menuitem-icon {
    background-repeat: no-repeat;
    height: 16px;
    left: 6px;
    position: absolute;
    right: auto;
    vertical-align: middle;
    width: 16px;
}
.learnblockWidgetDiv .goog-option-selected .goog-menuitem-checkbox,
.learnblockWidgetDiv .goog-option-selected .goog-menuitem-icon,
.learnblockDropDownDiv .goog-option-selected .goog-menuitem-checkbox,
.learnblockDropDownDiv .goog-option-selected .goog-menuitem-icon {
    position: static;
    /* Scroll with the menu. */
    float: left;
    margin-left: -24px;
}
